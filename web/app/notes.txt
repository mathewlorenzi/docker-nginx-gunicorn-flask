# camera -> capture -> POST(/image) -------> server record last image 
#                                   <------- returns last result (from ecovision)
#                                                               <----------  GET(/lastimage) <- ecovision
#                                            returns last image -----------> ecovision
#                                                   last result <----------- POST(/result) ecovision

# there are 5 nginx and there are sharing same resources !!!!!!!!???????????!!!!!!!!!????????????
# how to reproduce that in local:
# we app points to a docker ? not redis to start with but ????

# next step make reust wait for reply

# can we post to a client ?
# if yes, i receive image from cam, i post it to the client and wait for the reply that i send back to client cam

#its not the alreay uploaded for result
#and in camera display the timestamp of the returned image by ecovision

# why does ecovision start a new connection
# and why so mnay green (already uploaded result) and green: i should not care from camera.html pov
#  -> it is only important from ecovision pov
#  clean console: too many info

# nginx_1      | 2022/12/04 21:50:19 [warn] 21#21: *2 a client request body is buffered to a temporary file /var/cache/nginx/client_temp/0000000372
# https://medium.com/swlh/implement-a-websocket-using-flask-and-socket-io-python-76afa5bbeae1
# https://www.twilio.com/docs/voice/tutorials/consume-real-time-media-stream-using-websockets-python-and-flask
# ++++++ opencv camera read >.. but does it work in mobiles and camera ... NO ... 
# https://towardsdatascience.com/video-streaming-in-web-browsers-with-opencv-flask-93a38846fe00
# https://medium.com/@alexcambose/webcam-live-streaming-with-websockets-and-base64-64b1b4992db8
