
# https://blog.miguelgrinberg.com/post/video-streaming-with-flask

# ecovision in manager does stop anymore with mmaps. TODO have a timeout (if same timestamp for more than ... then exit ecovision thread)

#  ... ... 9 => mmaps writin byteval <class 'bytes'> b'\t'

# now get last image of results recorded in backend/result/camid
# but first
#   find a way to ... ? use shared volumes instead of tcp for ecovision


# print pid instead of thread from werkzeug


#try as png to client. not displayed only on android

#try local without manager to test directly ecovision

version: '3'

# ****** have an ecovision package compiled locally with local gcc ******

# === make sure to have these lines uncommented in Dependencies of DISPLAYCV_CPP
# - nano /home/ecorvee/Projects/EcoVision/ecplatform2/libs_cpp/libecpp_sources/libecpp_sources_prog/Dependencies.txt
# - nano /home/ecorvee/Projects/EcoVision/ecplatform2/programs/programecpp/platformecpp/Dependencies.txt
# USE LIBEC_DISPLAYCV_CPP
# USE DISPLAY_USING_OPENCV_CPP
# DEFINE DISPLAY_USING_OPENCV_CPP
# === make sure the home dir is set to /usr/src/app and no opencv display
# nano /home/ecorvee/Projects/EcoVision/ecplatform2/configure/configure_workspace.txt
# cd /home/ecorvee/Projects/EcoVision/ecplatform2/configure
# ./configure_workspace
# == locally ===
# cd ..
# ./compile.sh --display
# (if not present exe: make)
# cd /home/ecorvee/Projects/EcoVision/ecplatform2/programs/programecpp/platformecpp/
# ./test.sh

# ****** [LOCAL] build only the web and ecoclient docker containers ****** unless all ois find and just go up
# cd /home/ecorvee/Projects/WEBAPP/docker-nginx-gunicorn-flask
# docker-compose build backend
# docker-compose build web
# docker-compose build ecoclient
## docker-compose build nginx   # for VM
### remove the -d for dbugging easier
# docker-compose up -d backend
# docker-compose up -d web
# docker-compose build ecoclient
## docker-compose up -d nginx  # for VM
# === same docker as ecovision but different name obvioulsy and no need of shared folders ? TODO for logging yes 

# === build for VM: ecoviion do witout opencv display, see above
# cd /home/ecorvee/Projects/EcoVision
# make sure package_ecovision exists
# !!!!!!!!!!!! PWD is where ? EcoVision or ecplatform2 where the dockerfile is
# docker-compose build
# # docker run -t -d -v $PWD/package_ecovision:/usr/src/app/package_ecovision --name ecovision ecovision_ecovision
# docker run -t -d -v $PWD/shared_volume:/usr/src/app/shared_volume --name ecovision ecovision_ecovision
# docker ps
# docker exec -it <ID given from docker ps> bash
# ./compile.sh
# ./create_package.sh       => the creqted pqckqge with end up in the shared directory
# exit
# === go back to backend and get the compiled new package === 
# cd /home/ecorvee/Projects/WEBAPP/docker-nginx-gunicorn-flask
# # rm -rf ecoclient/package_ecovision
# rm -rf backend/package_ecovision
# # cp -r /home/ecorvee/Projects/EcoVision/shared_folder/package_ecovision ./ecoclient
# # cp -r /home/ecorvee/Projects/EcoVision/package_ecovision ./backend
# cp -r /home/ecorvee/Projects/EcoVision/shared_volume/package_ecovision ./backend
# git status
# git add ....
# git commit ....


# ========= dont forget before VM docker:
# app.py change #BACKEND_URL = 'http://127.0.0.1:5555', to
# => BACKEND_URL = 'http://backend:5555'


# backup ecovision
# cd /home/ecorvee/Projects/EcoVision
# ./backup_simple.sh <PQSSWORD  
# send by email

# local
# python backend.py --ecovisionPath ./package_ecovision --debug
# python web/app/app.py


# shit i cannot access web contanier => TODO add -p 5009:80
# docker run -t -d --name ecoclient docker-nginx-gunicorn-flask_ecoclient
# docker exec -it ecoclient bash

# https://github.com/abakonski/docker-compose-flask
services:

  # mydb:
  #   build:
  #     context: ./mydb
  #   container_name: mydb
  #   ports:
  #     - 5001:5001

  backend:
    build:
      context: ./backend
    container_name: backend
    volumes:
      - ./volume_backend:/usr/src/volume_backend
    ports:
      - 5555:5555
    command: bash -c "python3 setBashRc.py --ecovisionPath ./package_ecovision && source /root/.bashrc && python3 backend.py --ecovisionPath ./package_ecovision"
    # DEBUG
    # command: bash -c "python3 setBashRc.py --ecovisionPath ./package_ecovision && source /root/.bashrc && python3 backend.py --ecovisionPath ./package_ecovision --debug"

  web:
    # restart: always
    build:
      context: ./web
    ports:
      - 8000:8000
    command: gunicorn app.app:app --workers 4 --name app -b 0.0.0.0:8000
    # command: gunicorn app.app:app --workers 1 --name app -b 0.0.0.0:8000
    volumes:
      - ./database_clients_camera:/usr/src/database_clients_camera
    depends_on:
      - backend
    # depends_on:
    #   - mydb

  nginx:
    restart: always
    image: nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    ports:
      - 81:443
    links:
      - web

  # ecoclient:
  #   build:
  #     context: ./ecoclient
  #   container_name: ecoclient
  #   depends_on:
  #     - web
  #   #command: top -b
  #   command: bash -c "python3 setBashRc.py --ecovisionPath ./package_ecovision && source /root/.bashrc && python3 manager.py --url http://web --port 8000 --ecovisionPath ./package_ecovision"
  #   # add --debug    
    